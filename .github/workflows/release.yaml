name: Release
on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  release:
    env:
      BUILD_CONFIG: "Release"
      LEAGUE_TOOLKIT_PROJECT: "LeagueToolkit"

    runs-on: ubuntu-latest

    permissions:
      contents: write

    defaults:
      run:
        working-directory: ./src

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3.0.3
        with:
          dotnet-version: 7.x

      - name: Install dependencies
        run: dotnet restore

      - id: get_version
        uses: battila7/get-version-action@v2.2.1

      - name: Build
        run: dotnet build $LEAGUE_TOOLKIT_PROJECT --configuration $BUILD_CONFIG --no-restore

      - name: Run Tests
        run: dotnet test $LEAGUE_TOOLKIT_PROJECT.Tests --configuration $BUILD_CONFIG --no-restore --verbosity normal

      - name: Pack
        run: dotnet pack $LEAGUE_TOOLKIT_PROJECT -c $BUILD_CONFIG /p:Version=${{ steps.get_version.outputs.version-without-v }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.LEAGUE_TOOLKIT_PROJECT }}-${{ steps.get_version.outputs.version-without-v }}-${{ github.sha }}
          path: "src/${{ env.LEAGUE_TOOLKIT_PROJECT }}/bin/${{ env.BUILD_CONFIG }}"

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          omitBodyDuringUpdate: true
          tag: ${{ steps.create-tag.outputs.tag }}
          artifacts: "${{ env.LEAGUE_TOOLKIT_PROJECT }}-${{ steps.get_version.outputs.version-without-v }}-${{ github.sha }}"

      - name: Publish to NuGet
        run: dotnet nuget push "$LEAGUE_TOOLKIT_PROJECT/bin/$BUILD_CONFIG/$LEAGUE_TOOLKIT_PROJECT.${{ steps.get_version.outputs.version-without-v }}.nupkg" --source "https://api.nuget.org/v3/index.json" --api-key ${{secrets.NUGET_API_KEY}}
